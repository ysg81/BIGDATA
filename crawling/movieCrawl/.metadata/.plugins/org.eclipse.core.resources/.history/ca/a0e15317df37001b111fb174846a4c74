import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;

import java.util.Date;
import java.util.List;
import java.util.Set;

public class Maincode {

    private WebDriver driver;
    
    public static final String WEB_DRIVER_ID = "webdriver.chrome.driver";
    
    private String base_url;
    
    public Maincode() {
        super();
        
    }
    
    public static void main(String[] args) {
    	Maincode sel = new Maincode();

    	System.setProperty(WEB_DRIVER_ID, args[1]);
        sel.crawl(args);    
    }
    public void crawl(String[] args) {
    	int c;
    	
    	String[] charset = {"utf-8","euc-kr","ksc5601","iso-8859-1","UTF-16", "x-windows-949", "US-ASCII", "UTF-16BE", "Cp850","Cp852",
    			"iso-8859-2","iso-8859-3","iso-8859-4","Cp1252","Cp284"
    	
    	};
    	BufferedWriter fw = null;
	    try {
		    driver = new ChromeDriver();
		    JavascriptExecutor js = (JavascriptExecutor) driver;
		    
		    base_url = "https://www.google.com";
	        driver.get(base_url);
		    CSVParser csvFileParser = CSVFormat.DEFAULT.parse(new FileReader(args[0]));
		    fw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(args[2]/*,true*/), "utf-8"));
        	fw.flush();
        	WebElement long_summary;
        	WebElement sumEle;
        	
        	List<CSVRecord> list = csvFileParser.getRecords();
        	
        	System.out.println("추출 시작!");
        	int k=1;
            for( CSVRecord row : list ) {
            	System.out.println(k+"/"+list.size()+"번째");
            	Thread.sleep(500);
            	try {
	        		js.executeScript("location.href=\"https://www.imdb.com/title/tt"+String.format("%07d", Integer.parseInt(row.get(2)))+"\"");
	            } catch (Exception e) {
	                e.printStackTrace();
	                continue;
	            }
            	fw.write(row.get(0));
            	fw.write(",");
            	fw.write(row.get(2));
            	fw.write(",");
            	c = 20;
		        while(c>0 && driver.findElements(By.cssSelector("[itemprop=ratingValue]")).size()==0) {
		        	Thread.sleep(500);
		        	c--;
		        }
		        if(c>0)
		        	fw.write(driver.findElement(By.cssSelector("[itemprop=ratingValue]")).getText());
		        else
		        	fw.write("\"UNKNOWN\"");
		        fw.write(",\"");
		        
		        while(c>0 && driver.findElements(By.className("title_wrapper")).size()==0) {
		        	Thread.sleep(500);
		        	c--;
		        }
		        if(c>0) {
		        	fw.write(driver.findElement(By.className("title_wrapper")).findElement(By.cssSelector("h1")).getText().replace(",", "/"));
		        	fw.write("\",\"");
		        	fw.write(driver.findElement(By.className("title_wrapper")).findElement(By.className("subtext")).getText().replace(",", "/"));
		        	System.out.println(driver.findElement(By.className("title_wrapper")).findElement(By.cssSelector("h1")).getText());
		        	if(k==1) {
		        		String s = driver.findElement(By.className("title_wrapper")).findElement(By.cssSelector("h1")).getText();
		        		for(int i=0;i<charset.length;i++) {
		        			for(int j=0;j<charset.length;j++) {
		        				try {
		        					System.out.println("["+charset[i]+","+charset[j]+"] "+
		        				new String(s.getBytes(charset[i]),charset[j]));
		        				}
		        				catch(UnsupportedEncodingException e) {
		        					System.out.println("["+charset[i]+","+charset[j]+"] "+"X");
			        			}
		        			}
		        			
		        		}
		        	}
		        }
		        	
		        else
		        	fw.write("-\",\"-");
		        fw.write("\",\"");
		        
		        while(c>0 && driver.findElements(By.className("summary_text")).size()==0) {
		        	Thread.sleep(500);
		        	c--;
		        }
		        
		        long_summary = null;
		        sumEle = driver.findElement(By.className("summary_text"));
		        
				if(c>0) 
				{
					
					
					for(WebElement hyper : sumEle.findElements(By.cssSelector("a"))) {
						if(hyper.getText().equals("See full summary")) {
							long_summary = hyper;
							break;
						}
						else if(hyper.getText().equals("Add a Plot")) {
							c=0;
							break;
						}
					}
				}
				if(c>0) {
					if(long_summary != null) {
						long_summary.click();
						Thread.sleep(500);
						
						c=20;
						 while(c>0 && driver.findElements(By.className("ipl-zebra-list")).size()==0) {
				        	Thread.sleep(500);
				        	c--;
				        }
						if(c>0) {
							sumEle = driver.findElements(By.className("ipl-zebra-list")).get(0);
							while(c>0 && sumEle.findElements(By.className("ipl-zebra-list__item")).size()==0) {
					        	Thread.sleep(500);
					        	c--;
					        }
							if(c>0) {
								fw.write(sumEle.findElement(By.className("ipl-zebra-list__item")).findElement(By.cssSelector("p")).getText().replace("\"", "\'").replace("\n", " "));
							}
						}
						if(c<=0) fw.write("-");
					}
					else fw.write(sumEle.getText().replace("\"", "\'").replace("\n", " ").replace(" EN",""));
				}
		        else fw.write("-");
		        fw.write("\"");
		        fw.write("\r\n");
		        fw.flush();
		        k++;
		    }
        	
		    fw.flush();
		    fw.close();
		    
		    driver.quit();
	    } catch (Exception e) {
        	e.printStackTrace();
        	try {
        		driver.quit();
        	}
        	catch (Exception e2) {
            }
        	try {
        		if(fw!=null)
        			fw.close();
        	}
        	catch (Exception e2) {       	
        	}
            return;
        } 
 
    }
 
}